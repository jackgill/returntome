#!/usr/bin/perl

use strict;
use warnings;

use DBI;

use CGI qw(:standard *table); #function based interface to CGI module, start_table and end_table tags
use CGI::Carp qw(fatalsToBrowser); #send errors to browser as well as server error log

use lib '/home/jack/returntome/trunk/';
use Mod::DB;
use Mod::Conf;

my @tables = keys %{ &getSchemas };
#Set up the display page:
print header, start_html('Return To Me');

print h1("Return To Me");
print br();
print h4('"If you want a professional looking website, go hire a web designer." -- corporate motto');
print br();
print start_form,
 "Table: ",
popup_menu(-name=>'table', -values => \@tables),
submit,
    end_form;

if (param) {
    &displayTable(param('table'));
}
print end_html();
sub displayTable {
    my $table_name = shift;
#Connect to the database:
#Read conf file:
    my %conf = %{ &getConf("/home/jack/returntome/trunk/conf/talaria.conf") };
#Check that conf variables are defined:
    my @conf_vars = qw(db_server db_user db_pass);
    for (@conf_vars) {
	unless (defined $conf{$_}) {
	    die "Configuration error: conf/talaria.conf does not define $_\n";
	}
    }
    
#Connect to DB:
    &Mod::DB::connect("mysql:database=" . $conf{db_server},$conf{db_user},$conf{db_pass});
    my @table = @{ &getTable($table_name) };

#set up the table:
    print start_table({-border=>1});
    print caption("$table_name");
    my $col_names =shift @table;
    print Tr( th( $col_names ) );
    for (@table) {
	my @row_array = @$_;
	print "<tr>";
    my $i = 0;
    for (@row_array) {
	print "<td>";
	
	if ($i == 3 ) {
	print '<div style="overflow:auto; height:200px;width:600px;">';
	print pre($_);
	print "</div>";
	} else {
	    print;
	}
    	print "</td>";
	$i++;
    }
	print "</tr>";
    }
    
#End the table:
    print end_table;
    &Mod::DB::disconnect;
}


